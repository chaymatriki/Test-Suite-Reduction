<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<GeneralReport>
  <Class>
    <test>&#13;
br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldIgnoreWhenIncludeANonExistantField</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldIgnoreWhenYouIncludeANonExistantFieldInsideOther</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldIgnoreWhenYouIncludeAOptionalNonExistantFieldInsideOther</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldOptionallyIncludeListChildFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldIgnoreWhenYouIncludeANonExistantFieldInsideOtherNonExistantField</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldSerializeWithCallback</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldSerializeParentFields</test>
    <test>br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractorTest.shouldDecapitalizeSomeCharsUntilItFindsOneUppercasedForListsAndArraysForBoundedGenericElements</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldExcludeParentFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldOptionallyExcludeChildField</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldOptionallyExcludeFields</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldSerializeCalendarTimeWithISO8601</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldExcludeAllPrimitiveFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldSerializeAllBasicFields</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldSerializeParentFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldSerializeCollection</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldExcludeAllPrimitiveParentFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldSerializeCollection</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldIndentedWhenEnvironmentReturnsTrue</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldOptionallyExcludeFieldsFromIncludedListChildFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldSerializeParentFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldSerializeMaps</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldIncludeWhenYouIncludeAOptionsExistantFieldInsideOther</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldSerializeAllBasicFieldsIndented</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldSerializeAllBasicFieldsIndented</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldSerializeNullfieldswhenRequested</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldSerializeGenericClass</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldExcludeFieldsFromACollection</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldExcludeFieldsFromACollection</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldBeAbleToIncludeSubclassesFields</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldUseCollectionConverterWhenItExists</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldExcludeOnlyOmmitedFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldSerializeAllBasicFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldOptionallyExcludeFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldIncludeFieldsFromACollection</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldOptionallyIncludeChildField</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldOptionallyIncludeFieldAndNotItsNonPrimitiveFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldExcludeAllThanIncludeAndSerialize</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldOptionallyExcludeChildField</test>
    <test>br.com.caelum.vraptor.util.test.MockSerializationResultTest.shouldReturnStringWithObjectSerialized</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldAutomaticallyReadXStreamAnnotations</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldNotIndentedWhenEnvironmentReturnsFalse</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldSerializeCalendarAsISO8601</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldSerializeEnumFields</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldSerializeVersionedJsonFieldsWithSinceAnnotation</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldSerializeGenericClass</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldOptionallyIncludeChildField</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldBeAbleToIncludeSubclassesFields</test>
    <test>br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractorTest.shouldDecapitalizeSomeCharsUntilItFindsOneUppercasedForListsAndArrays</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldExcludeAllPrimitiveParentFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldAutomaticallyReadXStreamAnnotations</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldOptionallyExcludeFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldExcludeAllPrimitiveFields</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldNotSerializeNullFieldsByDefault</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldIgnoreWhenYouIncludeANonExistantFieldInsideOtherNonExistantField</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldOptionallyExcludeChildField</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldSerializeCollectionWithPrefixTag</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldNotIndentedWhenEnvironmentReturnsFalse</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldExcludeNonPrimitiveParentFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldIndentedWhenEnvironmentReturnsTrue</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldSerializeAllBasicFields</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldOptionallyIncludeListChildFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldSerializeEnumFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldOptionallyIncludeListChildFields</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldOptionallyRemoveRoot</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldOptionallyExcludeFieldsFromIncludedListChildFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldSerializeMaps</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldAutomaticallyReadXStreamAnnotationsForIncludedAttributes</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldExcludeAllThanIncludeAndSerialize</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldIncludeAllFieldsWhenRecursive</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldExcludeOmmitedClasses</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldSerializeRecursivelyVersionedJsonFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldIgnoreWhenYouIncludeANonExistantFieldInsideOther</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldOptionallyIncludeChildField</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldOptionallyIncludeFieldAndNotItsNonPrimitiveFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldOptionallyIncludeFieldAndNotItsNonPrimitiveFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldIgnoreWhenIncludeANonExistantField</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldSerializeDateWithISO8601</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldExcludeAllThanIncludeAndSerialize</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldNotIndentedWhenEnvironmentReturnsFalse</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldIndentedWhenEnvironmentReturnsTrue</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldSerializeEnumFields</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldSerializeGenericClass</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldOptionallyRemoveRootIndented</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldSerializeCalendarAsISO8601</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldExcludeAllPrimitiveParentFields</test>
    <test>br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractorTest.shouldDecapitalizeSomeCharsUntilItFindsOneUppercased</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldAutomaticallyReadXStreamAnnotationsForIncludedAttributes</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldSerializeCollectionWithPrefixTag</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldIncludeWhenYouIncludeAOptionsExistantFieldInsideOther</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldSerializeAllBasicFieldsIndented</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldIncludeFieldsFromACollection</test>
    <test>br.com.caelum.vraptor.interceptor.DefaultTypeNameExtractorTest.shouldDiscoverGenericTypeParametersWhenThereIsInheritance</test>
    <test>br.com.caelum.vraptor.serialization.gson.GsonJSONSerializationTest.shouldExcludeAllPrimitiveFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldOptionallyExcludeFieldsFromIncludedListChildFields</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamXMLSerializationTest.shouldIgnoreWhenYouIncludeAOptionalNonExistantFieldInsideOther</test>
    <test>br.com.caelum.vraptor.serialization.xstream.XStreamSerializerTest.shouldIncludeAllFieldsWhenRecursive</test>
    <test>&#13;
</test>
  </Class>
</GeneralReport>
